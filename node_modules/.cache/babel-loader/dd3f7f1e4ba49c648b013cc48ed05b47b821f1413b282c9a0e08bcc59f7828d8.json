{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const router = useRouter();\n    const username = ref('');\n    const password = ref('');\n    const loginResult = ref('');\n    const login = async () => {\n      const payload = {\n        username: username.value,\n        password: password.value\n      };\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/users/login/', payload);\n        if (response.data.status === 'True') {\n          const group = response.data.data.group;\n          const number = response.data.data.number;\n          loginResult.value = {\n            text: `注册成功，编号为第${group}组第${number}企业！`,\n            icon: 'success'\n          };\n          setTimeout(() => {\n            goToLogin(); // 注册成功后跳转到登录页\n          }, 4000); // 延迟4秒跳转\n        } else {\n          loginResult.value = {\n            text: response.data.data.logintxt,\n            // 显示登录失败的信息\n            icon: 'error'\n          };\n        }\n      } catch (error) {\n        registerResult.value = {\n          text: '注册失败，请重试！',\n          // 设置错误提示\n          icon: 'error'\n        };\n      }\n    };\n    const goToRegister = () => {\n      router.push('/register/'); // 跳转到注册\n    };\n    return {\n      username,\n      password,\n      loginResult,\n      login,\n      goToRegister\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","setup","router","username","password","loginResult","login","payload","value","response","post","data","status","group","number","text","icon","setTimeout","goToLogin","logintxt","error","registerResult","goToRegister","push"],"sources":["D:\\waigua\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h2>登录</h2>\r\n        <form @submit.prevent=\"login\">\r\n            <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" required>\r\n            <input type=\"password\" v-model=\"password\" placeholder=\"密码\" required>\r\n            <p>新用户请先点击注册！</p>\r\n            <div class=\"button-container\">\r\n                <button type=\"submit\" id=\"login-btn\">登录</button>\r\n                <button type=\"button\" id=\"register-btn\" @click=\"goToRegister\">注册</button>\r\n            </div>\r\n        </form>\r\n        <swal v-if=\"loginResult\" title=\"提示\" :text=\"loginResult.text\" :icon=\"loginResult.icon\"></swal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios'; \r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    setup() {\r\n        const router = useRouter();\r\n        const username = ref('');\r\n        const password = ref('');\r\n        const loginResult = ref('');\r\n\r\n        const login = async () => {\r\n            const payload = { username: username.value, password: password.value };\r\n            try {\r\n                const response = await axios.post('http://127.0.0.1:8000/users/login/', payload);\r\n                if (response.data.status === 'True') {\r\n                    const group = response.data.data.group;\r\n                    const number = response.data.data.number;\r\n                    loginResult.value = {\r\n                        text: `注册成功，编号为第${group}组第${number}企业！`,\r\n                        icon: 'success'\r\n                    };\r\n                    setTimeout(() => {\r\n                        goToLogin(); // 注册成功后跳转到登录页\r\n                    }, 4000); // 延迟4秒跳转\r\n                } else {\r\n                    loginResult.value = {\r\n                        text: response.data.data.logintxt, // 显示登录失败的信息\r\n                        icon: 'error'\r\n                    };\r\n                }\r\n            } catch (error) {\r\n                registerResult.value = {\r\n                    text: '注册失败，请重试！', // 设置错误提示\r\n                    icon: 'error'\r\n                };\r\n            }\r\n        };\r\n\r\n        const goToRegister = () => {\r\n            router.push('/register/'); // 跳转到注册\r\n        };\r\n\r\n        return {\r\n            username,\r\n            password,\r\n            loginResult,\r\n            login,\r\n            goToRegister,\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 引入样式 */\r\n@import '@/assets/styles/L&R.css';\r\n</style>\r\n"],"mappings":";AAiBA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIF,SAAS,CAAC,CAAC;IAC1B,MAAMG,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,WAAU,GAAIP,GAAG,CAAC,EAAE,CAAC;IAE3B,MAAMQ,KAAI,GAAI,MAAAA,CAAA,KAAY;MACtB,MAAMC,OAAM,GAAI;QAAEJ,QAAQ,EAAEA,QAAQ,CAACK,KAAK;QAAEJ,QAAQ,EAAEA,QAAQ,CAACI;MAAM,CAAC;MACtE,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,oCAAoC,EAAEH,OAAO,CAAC;QAChF,IAAIE,QAAQ,CAACE,IAAI,CAACC,MAAK,KAAM,MAAM,EAAE;UACjC,MAAMC,KAAI,GAAIJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACE,KAAK;UACtC,MAAMC,MAAK,GAAIL,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACG,MAAM;UACxCT,WAAW,CAACG,KAAI,GAAI;YAChBO,IAAI,EAAE,YAAYF,KAAK,KAAKC,MAAM,KAAK;YACvCE,IAAI,EAAE;UACV,CAAC;UACDC,UAAU,CAAC,MAAM;YACbC,SAAS,CAAC,CAAC,EAAE;UACjB,CAAC,EAAE,IAAI,CAAC,EAAE;QACd,OAAO;UACHb,WAAW,CAACG,KAAI,GAAI;YAChBO,IAAI,EAAEN,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACQ,QAAQ;YAAE;YACnCH,IAAI,EAAE;UACV,CAAC;QACL;MACJ,EAAE,OAAOI,KAAK,EAAE;QACZC,cAAc,CAACb,KAAI,GAAI;UACnBO,IAAI,EAAE,WAAW;UAAE;UACnBC,IAAI,EAAE;QACV,CAAC;MACL;IACJ,CAAC;IAED,MAAMM,YAAW,GAAIA,CAAA,KAAM;MACvBpB,MAAM,CAACqB,IAAI,CAAC,YAAY,CAAC,EAAE;IAC/B,CAAC;IAED,OAAO;MACHpB,QAAQ;MACRC,QAAQ;MACRC,WAAW;MACXC,KAAK;MACLgB;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}