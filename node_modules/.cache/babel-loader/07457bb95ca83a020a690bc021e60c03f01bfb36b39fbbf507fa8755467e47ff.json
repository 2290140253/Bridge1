{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_swal = _resolveComponent(\"swal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"登录\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.login && $setup.login(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"用户名\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    placeholder: \"密码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"新用户请先点击注册！\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    id: \"login-btn\"\n  }, \"登录\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    id: \"register-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.goToRegister && $setup.goToRegister(...args))\n  }, \"注册\")])], 32 /* NEED_HYDRATION */), $setup.loginResult ? (_openBlock(), _createBlock(_component_swal, {\n    key: 0,\n    title: \"提示\",\n    text: $setup.loginResult.text,\n    icon: $setup.loginResult.icon\n  }, null, 8 /* PROPS */, [\"text\", \"icon\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$setup","login","type","$event","username","placeholder","required","password","_hoisted_2","id","onClick","goToRegister","loginResult","_createBlock","_component_swal","key","title","text","icon","_createCommentVNode"],"sources":["D:\\waigua\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h2>登录</h2>\r\n        <form @submit.prevent=\"login\">\r\n            <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" required>\r\n            <input type=\"password\" v-model=\"password\" placeholder=\"密码\" required>\r\n            <p>新用户请先点击注册！</p>\r\n            <div class=\"button-container\">\r\n                <button type=\"submit\" id=\"login-btn\">登录</button>\r\n                <button type=\"button\" id=\"register-btn\" @click=\"goToRegister\">注册</button>\r\n            </div>\r\n        </form>\r\n        <swal v-if=\"loginResult\" title=\"提示\" :text=\"loginResult.text\" :icon=\"loginResult.icon\"></swal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios'; \r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    setup() {\r\n        const router = useRouter();\r\n        const username = ref('');\r\n        const password = ref('');\r\n        const loginResult = ref('');\r\n\r\n        const login = async () => {\r\n            const payload = { username: username.value, password: password.value };\r\n            try {\r\n                const response = await axios.post('http://127.0.0.1:8000/users/login/', payload);\r\n                if (response.data.status === 'True') {\r\n                    router.push('/main');\r\n                } else {\r\n                    loginResult.value = {\r\n                        text: response.data.data.logintxt, // 显示登录失败的信息\r\n                        icon: 'error'\r\n                    };\r\n                }\r\n            } catch (error) {\r\n                loginResult.value = {\r\n                    text: '登录失败，请重试！', // 设置错误提示\r\n                    icon: 'error'\r\n                };\r\n            }\r\n        };\r\n\r\n        const goToRegister = () => {\r\n            router.push('/register/'); // 跳转到注册\r\n        };\r\n\r\n        return {\r\n            username,\r\n            password,\r\n            loginResult,\r\n            login,\r\n            goToRegister,\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 引入样式 */\r\n@import '@/assets/styles/L&R.css';\r\n</style>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EAMTA,KAAK,EAAC;AAAkB;;;uBANrCC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXFC,mBAAA,CAAW,YAAP,IAAE,sBACNA,mBAAA,CAQO;IARAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHrBC,cAAA,KAAAC,IAAA,KAG+BC,MAAA,CAAAC,KAAA,IAAAD,MAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;sBACxBJ,mBAAA,CAAiE;IAA1DO,IAAI,EAAC,MAAM;IAJ9B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAIwCH,MAAA,CAAAI,QAAQ,GAAAD,MAAA;IAAEE,WAAW,EAAC,KAAK;IAACC,QAAQ,EAAR;iDAA5BN,MAAA,CAAAI,QAAQ,E,mBACpCT,mBAAA,CAAoE;IAA7DO,IAAI,EAAC,UAAU;IALlC,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAK4CH,MAAA,CAAAO,QAAQ,GAAAJ,MAAA;IAAEE,WAAW,EAAC,IAAI;IAACC,QAAQ,EAAR;iDAA3BN,MAAA,CAAAO,QAAQ,E,6BACxCZ,mBAAA,CAAiB,WAAd,YAAU,sBACbA,mBAAA,CAGM,OAHNa,UAGM,G,0BAFFb,mBAAA,CAAgD;IAAxCO,IAAI,EAAC,QAAQ;IAACO,EAAE,EAAC;KAAY,IAAE,sBACvCd,mBAAA,CAAyE;IAAjEO,IAAI,EAAC,QAAQ;IAACO,EAAE,EAAC,cAAc;IAAEC,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,MAAA,CAAAW,YAAA,IAAAX,MAAA,CAAAW,YAAA,IAAAZ,IAAA,CAAY;KAAE,IAAE,E,8BAG5DC,MAAA,CAAAY,WAAW,I,cAAvBC,YAAA,CAA6FC,eAAA;IAZrGC,GAAA;IAYiCC,KAAK,EAAC,IAAI;IAAEC,IAAI,EAAEjB,MAAA,CAAAY,WAAW,CAACK,IAAI;IAAGC,IAAI,EAAElB,MAAA,CAAAY,WAAW,CAACM;+CAZxFC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}