{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const router = useRouter();\n    const className = ref('');\n    const studentID = ref('');\n    const name = ref('');\n    const teamName = ref('');\n    const password = ref('');\n    const phone = ref('');\n    const registerResult = ref('');\n    const register = async () => {\n      const payload = {\n        className: className.value,\n        studentID: studentID.value,\n        name: name.value,\n        teamName: teamName.value,\n        password: password.value,\n        phone: phone.value\n      };\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/users/register/', payload);\n        if (response.data.success) {\n          registerResult.value = response.data.message; // 注册成功的信息\n          setTimeout(() => {\n            goToLogin(); // 注册成功后跳转到登录页\n          }, 4000); // 延迟4秒跳转\n        } else {\n          registerResult.value = response.data.message; // 设置错误提示\n        }\n      } catch (error) {\n        registerResult.value = '注册失败，请重试！'; // 设置错误提示\n      }\n    };\n    const goToLogin = () => {\n      router.push('/login/');\n    };\n    return {\n      className,\n      studentID,\n      name,\n      teamName,\n      password,\n      phone,\n      registerResult,\n      register,\n      goToLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","Swal","axios","useRouter","setup","router","className","studentID","name","teamName","password","phone","registerResult","register","payload","value","response","post","data","success","message","setTimeout","goToLogin","error","push"],"sources":["D:\\waigua\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h2>注册</h2>\r\n        <form @submit.prevent=\"register\">\r\n            <input type=\"text\" v-model=\"className\" placeholder=\"班级\" required>\r\n            <input type=\"text\" v-model=\"studentID\" placeholder=\"学号\" required>\r\n            <input type=\"text\" v-model=\"name\" placeholder=\"姓名\" required>\r\n            <input type=\"text\" v-model=\"teamName\" placeholder=\"队名\" required>\r\n            <input type=\"password\" v-model=\"password\" placeholder=\"密码\" required>\r\n            <input type=\"tel\" v-model=\"phone\" placeholder=\"手机号\" required>\r\n            <div class=\"button-container\">\r\n                <button type=\"button\" @click=\"goToLogin\">返回登录</button>\r\n                <button type=\"submit\" id=\"register-btn\">注册</button>\r\n            </div>\r\n        </form>\r\n        <swal v-if=\"registerResult\" title=\"提示\" :text=\"registerResult\" icon=\"error\"></swal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    setup() {\r\n        const router = useRouter();\r\n        \r\n        const className = ref('');\r\n        const studentID = ref('');\r\n        const name = ref('');\r\n        const teamName = ref('');\r\n        const password = ref('');\r\n        const phone = ref('');\r\n        const registerResult = ref('');\r\n\r\n        const register = async () => {\r\n            const payload = {\r\n                className: className.value,\r\n                studentID: studentID.value,\r\n                name: name.value,\r\n                teamName: teamName.value,\r\n                password: password.value,\r\n                phone: phone.value\r\n            };\r\n            try {\r\n                const response = await axios.post('http://127.0.0.1:8000/users/register/', payload);\r\n                if (response.data.success) {\r\n                    registerResult.value = response.data.message; // 注册成功的信息\r\n                    setTimeout(() => {\r\n                        goToLogin(); // 注册成功后跳转到登录页\r\n                    }, 4000); // 延迟4秒跳转\r\n                } else {\r\n                    registerResult.value = response.data.message; // 设置错误提示\r\n                }\r\n            } catch (error) {\r\n                registerResult.value = '注册失败，请重试！'; // 设置错误提示\r\n            }\r\n        };\r\n\r\n        const goToLogin = () => {\r\n            router.push('/login/');\r\n        };\r\n\r\n        return {\r\n            className,\r\n            studentID,\r\n            name,\r\n            teamName,\r\n            password,\r\n            phone,\r\n            registerResult,\r\n            register,\r\n            goToLogin,\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 引入样式 */\r\n@import '@/assets/styles/L&R.css';\r\n</style>"],"mappings":";AAoBA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,IAAG,MAAO,aAAa;AAC9B,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIF,SAAS,CAAC,CAAC;IAE1B,MAAMG,SAAQ,GAAIN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,SAAQ,GAAIP,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMQ,IAAG,GAAIR,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMS,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,QAAO,GAAIV,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMW,KAAI,GAAIX,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMY,cAAa,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAE9B,MAAMa,QAAO,GAAI,MAAAA,CAAA,KAAY;MACzB,MAAMC,OAAM,GAAI;QACZR,SAAS,EAAEA,SAAS,CAACS,KAAK;QAC1BR,SAAS,EAAEA,SAAS,CAACQ,KAAK;QAC1BP,IAAI,EAAEA,IAAI,CAACO,KAAK;QAChBN,QAAQ,EAAEA,QAAQ,CAACM,KAAK;QACxBL,QAAQ,EAAEA,QAAQ,CAACK,KAAK;QACxBJ,KAAK,EAAEA,KAAK,CAACI;MACjB,CAAC;MACD,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,uCAAuC,EAAEH,OAAO,CAAC;QACnF,IAAIE,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;UACvBP,cAAc,CAACG,KAAI,GAAIC,QAAQ,CAACE,IAAI,CAACE,OAAO,EAAE;UAC9CC,UAAU,CAAC,MAAM;YACbC,SAAS,CAAC,CAAC,EAAE;UACjB,CAAC,EAAE,IAAI,CAAC,EAAE;QACd,OAAO;UACHV,cAAc,CAACG,KAAI,GAAIC,QAAQ,CAACE,IAAI,CAACE,OAAO,EAAE;QAClD;MACJ,EAAE,OAAOG,KAAK,EAAE;QACZX,cAAc,CAACG,KAAI,GAAI,WAAW,EAAE;MACxC;IACJ,CAAC;IAED,MAAMO,SAAQ,GAAIA,CAAA,KAAM;MACpBjB,MAAM,CAACmB,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,OAAO;MACHlB,SAAS;MACTC,SAAS;MACTC,IAAI;MACJC,QAAQ;MACRC,QAAQ;MACRC,KAAK;MACLC,cAAc;MACdC,QAAQ;MACRS;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}